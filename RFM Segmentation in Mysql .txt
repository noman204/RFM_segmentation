USE RFM;
-- Inspecting Data
SELECT * FROM SALES_SAMPLE_DATA LIMIT 10;
SELECT COUNT(*) FROM SALES_SAMPLE_DATA; -- 2823

-- Checking unique values
select distinct status from SALES_SAMPLE_DATA;
select distinct year_id from SALES_SAMPLE_DATA;
select distinct PRODUCTLINE from SALES_SAMPLE_DATA;
select distinct COUNTRY from SALES_SAMPLE_DATA;
select distinct DEALSIZE from SALES_SAMPLE_DATA;
select distinct TERRITORY from SALES_SAMPLE_DATA;

select distinct MONTH_ID from SALES_SAMPLE_DATA
where year_id = 2005
ORDER BY MONTH_ID;

select year_id, sum(sales) as revenue
    from SALES_SAMPLE_DATA
group by 1
ORDER BY 1;

-- ANALYSIS
-- Let's start by grouping sales by productline

SELECT ORDERNUMBER, ORDERLINENUMBER, PRODUCTLINE, SALES  
FROM SALES_SAMPLE_DATA
ORDER BY 1, 2
LIMIT 100;

select PRODUCTLINE, ROUND(sum(sales),0) AS Revenue, COUNT(DISTINCT ORDERNUMBER) AS NO_OF_ORDERS
from SALES_SAMPLE_DATA
group by PRODUCTLINE
order by 3 desc;


select YEAR_ID, sum(sales) Revenue
from SALES_SAMPLE_DATA
group by YEAR_ID
order by 2 desc;

select  DEALSIZE,  sum(sales) Revenue
from SALES_SAMPLE_DATA
group by DEALSIZE
order by 2 desc;


--- What was the best month for sales in a specific year? How much was earned that month? 
select  MONTH_ID, sum(sales) Revenue, count(ORDERNUMBER) Frequency
from SALES_SAMPLE_DATA
where YEAR_ID = 2004 -- change year to see the rest
group by  MONTH_ID
order by 2 desc;

-- November seems to be the month, what product did they sell in November, Classi cars I believe
select  PRODUCTLINE, sum(sales) Revenue, count(ORDERNUMBER) Frequency
from SALES_SAMPLE_DATA
where YEAR_ID = 2004 and MONTH_ID = 11 -- change year to see the rest
group by  MONTH_ID, PRODUCTLINE
order by Revenue desc;

-- Who is our best customer (this could be best answered with RFM)  

-- Display ORDERDATE from the first 5 records  
SELECT ORDERDATE FROM SALES_SAMPLE_DATA LIMIT 5;  

-- Display converted date using TO_DATE for the first 5 records  
SELECT STR_TO_DATE(ORDERDATE, '%d/%m/%y') AS Date FROM SALES_SAMPLE_DATA LIMIT 5;  

-- Find the latest transaction date  
SELECT MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) AS LATESTDATE FROM SALES_SAMPLE_DATA;  

-- Find the earliest transaction date  
SELECT MIN(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) AS EARLIESTDATE FROM SALES_SAMPLE_DATA;  

-- Calculate the range of transactions in days  
SELECT DATEDIFF(MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')), MIN(STR_TO_DATE(ORDERDATE, '%d/%m/%y'))) AS `RANGE` FROM SALES_SAMPLE_DATA;

-- Create the RFM segment view  
CREATE VIEW RFM_SEGMENT AS  
WITH RFM_INITIAL_CAL AS  
(SELECT  
    CUSTOMERNAME,  
    ROUND(SUM(SALES),0) AS MonetaryValue,  
    COUNT(DISTINCT ORDERNUMBER) AS Frequency,  
    DATEDIFF(MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')), (SELECT MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) FROM SALES_SAMPLE_DATA)) AS Recency  
FROM SALES_SAMPLE_DATA  
GROUP BY CUSTOMERNAME),  

RFM_SCORE_CALC AS  
(SELECT   
    C.*,  
    NTILE(4) OVER (ORDER BY C.RECENCY DESC) RFM_RECENCY_SCORE,  
    NTILE(4) OVER (ORDER BY C.FREQUENCY ASC) RFM_FREQUENCY_SCORE,  
    NTILE(4) OVER (ORDER BY C.MonetaryValue ASC) RFM_MONETARY_SCORE  
FROM RFM_INITIAL_CAL AS C)  

SELECT  
    R.CUSTOMERNAME,  
    (R.RFM_RECENCY_SCORE+ R.RFM_FREQUENCY_SCORE+ R.RFM_MONETARY_SCORE) AS TOTAL_RFM_SCORE,  
    CONCAT(CAST(R.RFM_RECENCY_SCORE AS CHAR), CAST(R.RFM_FREQUENCY_SCORE AS CHAR), CAST(R.RFM_MONETARY_SCORE AS CHAR)) AS RFM_CATEGORY_COMBINATION  
FROM RFM_SCORE_CALC AS R;  

SELECT * FROM RFM_SEGMENT;  

SELECT DISTINCT RFM_CATEGORY_COMBINATION   
    FROM RFM_SEGMENT  
ORDER BY 1;  

SELECT   
    CUSTOMERNAME,  
    CASE  
        WHEN RFM_CATEGORY_COMBINATION IN ('111', '112', '121', '123', '132', '211', '211', '212', '114', '141') THEN 'CHURNED CUSTOMER'  
        WHEN RFM_CATEGORY_COMBINATION IN ('133', '134', '143', '244', '334', '343', '344', '144') THEN 'SLIPPING AWAY, CANNOT LOSE'  
        WHEN RFM_CATEGORY_COMBINATION IN ('311', '411', '331') THEN 'NEW CUSTOMERS'  
        WHEN RFM_CATEGORY_COMBINATION IN ('222', '231', '221', '223', '233', '322') THEN 'POTENTIAL CHURNERS'  
        WHEN RFM_CATEGORY_COMBINATION IN ('323', '333', '321', '341', '422', '332', '432') THEN 'ACTIVE'  
        WHEN RFM_CATEGORY_COMBINATION IN ('433', '434', '443', '444') THEN 'LOYAL'  
    ELSE 'CANNOT BE DEFINED'  
    END AS CUSTOMER_SEGMENT  
FROM RFM_SEGMENT;  

-- Calculate the number of customers in each segment  
WITH CTE1 AS  
(SELECT   
    CUSTOMERNAME,  
    CASE  
        WHEN RFM_CATEGORY_COMBINATION IN ('111', '112', '121', '123', '132', '211', '211', '212', '114', '141') THEN 'CHURNED CUSTOMER'  
        WHEN RFM_CATEGORY_COMBINATION IN ('133', '134', '143', '244', '334', '343', '344', '144') THEN 'SLIPPING AWAY, CANNOT LOSE'  
        WHEN RFM_CATEGORY_COMBINATION IN ('311', '411', '331') THEN 'NEW CUSTOMERS'  
        WHEN RFM_CATEGORY_COMBINATION IN ('222', '231', '221', '223', '233', '322') THEN 'POTENTIAL CHURNERS'  
        WHEN RFM_CATEGORY_COMBINATION IN ('323', '333', '321', '341', '422', '332', '432') THEN 'ACTIVE'  
        WHEN RFM_CATEGORY_COMBINATION IN ('433', '434', '443', '444') THEN 'LOYAL'  
    ELSE 'CANNOT BE DEFINED'  
    END AS CUSTOMER_SEGMENT  
FROM RFM_SEGMENT)  

SELECT   
    CUSTOMER_SEGMENT, COUNT(*) AS Number_of_Customers  
FROM CTE1  
GROUP BY CUSTOMER_SEGMENT  
ORDER BY Number_of_Customers DESC;

